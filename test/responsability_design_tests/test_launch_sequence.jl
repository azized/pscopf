using Test
using Dates
using JuMP

#=
sequence launcher can have a :
    init metod : launched at the beginning to initialize context and init first network situation
    step method :  to launch an operation without changing the ech
    step_ech method : to launch an operation and change ech
    final_step method : to launch a final operation at the end of the execution (eg assessment or evaluate_costs ...)
=#

@testset verbose=true "sequence_launch" begin

    #=
    INPUT :
        Network := Electric grid description
        TS := target time steps (dates d'intérêt)
        Mode de gestion = mode 1
        ECH := list of horizon points as generated by the generate_ech responsibility
    EXPECTED OUTPUT :
        At each horizon point, an ordered list of operations (a sequence)
    =#
    @testset "mode_1" begin
        grid = create_grid(#=FIXME initial input or mocks=#)
        ts1 #=FIXME initial input or mocks=#
        TS = create_TS(Dates.DateTime(ts1)) #ts1 .+ [Dates.Minute(0), Dates.Minute(15), Dates.Minute(30), Dates.Minute(45)]
        mode = PSCOPF_MODE_1
        ECH = generate_ech(grid, TS, mode)

        # FIXME : MAYBE it is better if the sequencer (i.e. generate_sequences) works with a Session that contains the grid, TS, ECH,...
        #and the launcher creates a context to
        #   - maintains the current ech, current schedule, ..
        #   - saves the schedule history,...
        sequence #FIXME generate_sequences(grid, TS, ECH, mode)
        session  #FIXME Session(grid,TS,ECH)
        initial_situation #FIXME
        uncertainties #FIXME generate_uncertainties(grid, TS, ECH, uncertainties_distribution, NB_SCENARIOSN)
        assessment_uncertainties #FIXME generate_uncertainties(grid, TS, ECH, uncertainties_distribution, NB_SCENARIOSN)

        launch(sequence, session, initial_situation, uncertainties, assessment_uncertainties)

        #FIXME : TESTS
    end

    @testset "mode_2" begin
        @test false
    end

    @testset "mode_3" begin
        @test false
    end

end
